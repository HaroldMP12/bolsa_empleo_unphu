// <auto-generated />
using System;
using BolsaEmpleoUnphu.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BolsaEmpleoUnphu.Data.Migrations
{
    [DbContext(typeof(BolsaEmpleoUnphuContext))]
    partial class BolsaEmpleoUnphuContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.BitacoraAccionesModel", b =>
                {
                    b.Property<int>("RegistroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RegistroID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistroID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("EntidadAfectada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EntidadAfectada");

                    b.Property<DateTime>("FechaAccion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaAccion");

                    b.Property<string>("TipoAccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TipoAccion");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("RegistroID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("BitacoraAcciones");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.CarrerasModel", b =>
                {
                    b.Property<int>("CarreraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarreraID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarreraID"));

                    b.Property<string>("Facultad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Facultad");

                    b.Property<string>("NombreCarrera")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NombreCarrera");

                    b.HasKey("CarreraID");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.CategoriasModel", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<int?>("CategoriaPadreID")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaPadreID");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NombreCategoria");

                    b.HasKey("CategoriaID");

                    b.HasIndex("CategoriaPadreID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.EmpresasModel", b =>
                {
                    b.Property<int>("EmpresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmpresaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpresaID"));

                    b.Property<string>("CantidadEmpleados")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CantidadEmpleados");

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Direccion");

                    b.Property<string>("ImagenLogo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ImagenLogo");

                    b.Property<string>("ImagenPortada")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ImagenPortada");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NombreEmpresa");

                    b.Property<string>("Observaciones")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Observaciones");

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("RNC");

                    b.Property<string>("Sector")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Sector");

                    b.Property<string>("SitioWeb")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("SitioWeb");

                    b.Property<string>("TelefonoEmpresa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TelefonoEmpresa");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("EmpresaID");

                    b.HasIndex("RNC")
                        .IsUnique();

                    b.HasIndex("UsuarioID")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.InformacionesAcademicasModel", b =>
                {
                    b.Property<int>("InfoAcademicaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InfoAcademicaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InfoAcademicaID"));

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaInicio");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Institucion");

                    b.Property<string>("NivelDeFormacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NivelDeFormacion");

                    b.Property<string>("TituloObtenido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TituloObtenido");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("InfoAcademicaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("InformacionesAcademicas");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.InformacionesLaboralesModel", b =>
                {
                    b.Property<int>("InfoLaboralID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InfoLaboralID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InfoLaboralID"));

                    b.Property<bool>("ActualmenteTrabajando")
                        .HasColumnType("bit")
                        .HasColumnName("ActualmenteTrabajando");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Cargo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Descripcion");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Empresa");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaInicio");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("InfoLaboralID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("InformacionesLaborales");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.NotificacionesModel", b =>
                {
                    b.Property<int>("NotificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificacionID"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaEnvio");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Mensaje");

                    b.Property<string>("ReferenciaTipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ReferenciaTipo");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("NotificacionID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Notificaciones");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PerfilesModel", b =>
                {
                    b.Property<int>("PerfilID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PerfilID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerfilID"));

                    b.Property<int?>("AñoGraduacion")
                        .HasColumnType("int")
                        .HasColumnName("AñoGraduacion");

                    b.Property<int>("CarreraID")
                        .HasColumnType("int")
                        .HasColumnName("CarreraID");

                    b.Property<DateTime?>("FechaEgreso")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaEgreso");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaIngreso");

                    b.Property<string>("Matricula")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Matricula");

                    b.Property<string>("RedesSociales")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("RedesSociales");

                    b.Property<string>("Resumen")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Resumen");

                    b.Property<int?>("Semestre")
                        .HasColumnType("int")
                        .HasColumnName("Semestre");

                    b.Property<string>("TipoPerfil")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TipoPerfil")
                        .HasComment("Valores permitidos: 'Estudiante', 'Egresado', 'Ambos'");

                    b.Property<string>("TituloObtenido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TituloObtenido");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("UrlImagen");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("PerfilID");

                    b.HasIndex("CarreraID");

                    b.HasIndex("UsuarioID")
                        .IsUnique();

                    b.ToTable("Perfiles");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PostulacionesModel", b =>
                {
                    b.Property<int>("PostulacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PostulacionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostulacionID"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaPostulacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaPostulacion");

                    b.Property<string>("Observaciones")
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Observaciones");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.Property<int>("VacanteID")
                        .HasColumnType("int")
                        .HasColumnName("VacanteID");

                    b.HasKey("PostulacionID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex("VacanteID");

                    b.ToTable("Postulaciones");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PreguntasVacantesModel", b =>
                {
                    b.Property<int>("PreguntaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PreguntaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreguntaID"));

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)")
                        .HasColumnName("Pregunta");

                    b.Property<int>("VacanteID")
                        .HasColumnType("int")
                        .HasColumnName("VacanteID");

                    b.HasKey("PreguntaID");

                    b.HasIndex("VacanteID");

                    b.ToTable("PreguntasVacantes");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.RespuestasPostulacionesModel", b =>
                {
                    b.Property<int>("RespuestaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RespuestaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RespuestaID"));

                    b.Property<int>("PostulacionID")
                        .HasColumnType("int")
                        .HasColumnName("PostulacionID");

                    b.Property<int>("PreguntaID")
                        .HasColumnType("int")
                        .HasColumnName("PreguntaID");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Respuesta");

                    b.HasKey("RespuestaID");

                    b.HasIndex("PostulacionID");

                    b.HasIndex("PreguntaID");

                    b.ToTable("RespuestasPostulaciones");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.RolesModel", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NombreRol");

                    b.HasKey("RolID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.UsuariosModel", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Contraseña");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Correo");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("Estado");

                    b.Property<DateTime?>("FechaCambioUltimaContraseña")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCambioUltimaContraseña");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaRegistro");

                    b.Property<DateTime?>("FechaUltimaActualización")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaUltimaActualización");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NombreCompleto");

                    b.Property<int>("RolID")
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Telefono");

                    b.HasKey("UsuarioID");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.HasIndex("RolID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.VacantesModel", b =>
                {
                    b.Property<int>("VacanteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VacanteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacanteID"));

                    b.Property<int>("CantidadVacantes")
                        .HasColumnType("int")
                        .HasColumnName("CantidadVacantes");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Descripcion");

                    b.Property<int>("EmpresaID")
                        .HasColumnType("int")
                        .HasColumnName("EmpresaID");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaCierre");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaModificacion");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaPublicacion");

                    b.Property<string>("Jornada")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Jornada");

                    b.Property<string>("Modalidad")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Modalidad");

                    b.Property<string>("Requisitos")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)")
                        .HasColumnName("Requisitos");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Salario");

                    b.Property<string>("TipoContrato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TipoContrato");

                    b.Property<string>("TituloVacante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TituloVacante");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Ubicacion");

                    b.HasKey("VacanteID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Vacantes");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.BitacoraAccionesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.UsuariosModel", "Usuario")
                        .WithMany("BitacoraAcciones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.CategoriasModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.CategoriasModel", "CategoriaPadre")
                        .WithMany("CategoriasHijas")
                        .HasForeignKey("CategoriaPadreID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CategoriaPadre");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.EmpresasModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.UsuariosModel", "Usuario")
                        .WithOne("Empresa")
                        .HasForeignKey("BolsaEmpleoUnphu.Data.Models.EmpresasModel", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.InformacionesAcademicasModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.UsuariosModel", "Usuario")
                        .WithMany("InformacionesAcademicas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.InformacionesLaboralesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.UsuariosModel", "Usuario")
                        .WithMany("InformacionesLaborales")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.NotificacionesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.UsuariosModel", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PerfilesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.CarrerasModel", "Carrera")
                        .WithMany("Perfiles")
                        .HasForeignKey("CarreraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BolsaEmpleoUnphu.Data.Models.UsuariosModel", "Usuario")
                        .WithOne("Perfil")
                        .HasForeignKey("BolsaEmpleoUnphu.Data.Models.PerfilesModel", "UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PostulacionesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.UsuariosModel", "Usuario")
                        .WithMany("Postulaciones")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BolsaEmpleoUnphu.Data.Models.VacantesModel", "Vacante")
                        .WithMany("Postulaciones")
                        .HasForeignKey("VacanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PreguntasVacantesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.VacantesModel", "Vacante")
                        .WithMany("PreguntasVacantes")
                        .HasForeignKey("VacanteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacante");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.RespuestasPostulacionesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.PostulacionesModel", "Postulacion")
                        .WithMany("RespuestasPostulaciones")
                        .HasForeignKey("PostulacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BolsaEmpleoUnphu.Data.Models.PreguntasVacantesModel", "Pregunta")
                        .WithMany("RespuestasPostulaciones")
                        .HasForeignKey("PreguntaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Postulacion");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.UsuariosModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.RolesModel", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.VacantesModel", b =>
                {
                    b.HasOne("BolsaEmpleoUnphu.Data.Models.CategoriasModel", "Categoria")
                        .WithMany("Vacantes")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BolsaEmpleoUnphu.Data.Models.EmpresasModel", "Empresa")
                        .WithMany("Vacantes")
                        .HasForeignKey("EmpresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.CarrerasModel", b =>
                {
                    b.Navigation("Perfiles");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.CategoriasModel", b =>
                {
                    b.Navigation("CategoriasHijas");

                    b.Navigation("Vacantes");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.EmpresasModel", b =>
                {
                    b.Navigation("Vacantes");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PostulacionesModel", b =>
                {
                    b.Navigation("RespuestasPostulaciones");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.PreguntasVacantesModel", b =>
                {
                    b.Navigation("RespuestasPostulaciones");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.RolesModel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.UsuariosModel", b =>
                {
                    b.Navigation("BitacoraAcciones");

                    b.Navigation("Empresa");

                    b.Navigation("InformacionesAcademicas");

                    b.Navigation("InformacionesLaborales");

                    b.Navigation("Notificaciones");

                    b.Navigation("Perfil");

                    b.Navigation("Postulaciones");
                });

            modelBuilder.Entity("BolsaEmpleoUnphu.Data.Models.VacantesModel", b =>
                {
                    b.Navigation("Postulaciones");

                    b.Navigation("PreguntasVacantes");
                });
#pragma warning restore 612, 618
        }
    }
}
